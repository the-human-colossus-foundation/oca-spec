import{_ as e,c as n,o as i,d as t}from"./app-iW2lecvr.js";const a={},o=t('<h1>OCA Bin</h1><p>The <strong>OCA Bin</strong> is a command-line utility designed as the primary interface to the OCA Ecosystem. It offers a range of commands to manage both OCAFiles and OCA Bundles, streamlining the workflow for OCA-based projects. Internally, OCA Bin replicates functionality similar to an OCA Repo, resembling the experience of working with a Git repository. Its command set supports local OCAFile development and testing, enabling fast iteration and reducing the feedback loop for developers.</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h2><p>The OCA Bin is distributed as a standalone executable. You can download the latest version from the <a href="https://github.com/THCLab/oca-bin/releases" target="_blank" rel="noopener noreferrer">OCA Bin GitHub Releases</a> page.</p><h2 id="workflows" tabindex="-1"><a class="header-anchor" href="#workflows"><span>Workflows</span></a></h2><h3 id="ocafile-development" tabindex="-1"><a class="header-anchor" href="#ocafile-development"><span>OCAFile development</span></a></h3><p>When working with an <strong>OCAFile</strong>, a typical workflow involves making changes, validating the OCAFile&#39;s correctness, and repeating as necessary. Once finalized, the OCAFile can be built and published to the OCA Repo. The commands <code>validate</code>, <code>build</code>, and <code>publish</code> are integrated directly into <strong>OCA Bin</strong> to streamline this process.</p><h3 id="continuous-integration-continuous-deployment-ci-cd-pipeline" tabindex="-1"><a class="header-anchor" href="#continuous-integration-continuous-deployment-ci-cd-pipeline"><span>Continuous Integration/Continuous Deployment (CI/CD) pipeline</span></a></h3><p>The <a href="#ocafiles-organization">OCAFiles organization</a> section covers various options for storing OCAFiles. To ensure accuracy and enable additional automated processes when a (sub)set of OCAFiles changes, <strong>OCA Bin</strong> integrates seamlessly with CI/CD pipelines.</p><p>The following pipeline setup can be implemented to maintain OCAFile accuracy:</p><ol><li>When a subset of OCAFiles changes (e.g., within a Git commit), the pipeline runs <code>oca build -d &lt;directory&gt; --diff</code> with <strong>OCA Bin</strong> to validate and build the modified OCAFiles. The <code>--diff</code> flag ensures that only the changed OCAFiles have been processed since the last build.</li><li>If the previous step succeeds and the changes are validated, the pipeline can mark them as ready for the next stage, such as merging the pull request in GitHub or adding a <code>+1</code> score in Gerrit.</li><li>Finally, the pipeline can publish the OCAFiles to the OCA Repo using <code>oca publish -d &lt;directory&gt;</code>.</li></ol><h2 id="concepts" tabindex="-1"><a class="header-anchor" href="#concepts"><span>Concepts</span></a></h2><h3 id="local-state" tabindex="-1"><a class="header-anchor" href="#local-state"><span>Local state</span></a></h3><p>OCA Bin keeps config and its local state within <code>~/.oca</code> directory.</p><h3 id="cache" tabindex="-1"><a class="header-anchor" href="#cache"><span>Cache</span></a></h3><p>When the <code>-d &lt;directory&gt;</code> option is used, <strong>OCA Bin</strong> creates a cache directory, <code>.oca-bin</code>, relative to the specified <code>&lt;directory&gt;</code>. This directory stores intermediate files generated by the <code>build</code> command, enhancing the efficiency of both the <code>build</code> and <code>publish</code> commands by preventing redundant reprocessing of OCAFiles.</p><h3 id="ocafile-and-oca-bundle" tabindex="-1"><a class="header-anchor" href="#ocafile-and-oca-bundle"><span>OCAFile and OCA Bundle</span></a></h3><p>An <strong>OCAFile</strong> is the entry point for modeling within the OCA Ecosystem. Using its Domain-Specific Language (DSL) enables the creation of complex data models. On the other hand, the <strong>OCA Bundle</strong> is the end product of the OCAFile, providing integrity to the OCA Ecosystem. This integrity property ensures that any OCA Bundle remains untampered and safeguarded through hashes generated by one-way hash functions. These hashes are embedded directly into the Bundles.</p><h3 id="ocafiles-organization" tabindex="-1"><a class="header-anchor" href="#ocafiles-organization"><span>OCAFiles organization</span></a></h3><p>When managing an extensive collection of OCAFiles, it&#39;s often beneficial to use a <a href="https://en.wikipedia.org/w/index.php?title=Version_control_system" target="_blank" rel="noopener noreferrer">Version Control System (VCS)</a>, such as Git, to track changes and maintain organized control. OCA Bin operates under the assumption that a complete data model can be structured with OCAFiles and, therefore, includes a <code>-d</code> flag across multiple commands to specify the directory containing these files. This approach facilitates efficient management of all files in the specified directory, mainly for validation, building, and publishing tasks.</p>',20),s=[o];function l(c,r){return i(),n("div",null,s)}const h=e(a,[["render",l],["__file","oca-bin.html.vue"]]),p=JSON.parse('{"path":"/ecosystem/oca-bin.html","title":"OCA Bin","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[]},{"level":2,"title":"Workflows","slug":"workflows","link":"#workflows","children":[{"level":3,"title":"OCAFile development","slug":"ocafile-development","link":"#ocafile-development","children":[]},{"level":3,"title":"Continuous Integration/Continuous Deployment (CI/CD) pipeline","slug":"continuous-integration-continuous-deployment-ci-cd-pipeline","link":"#continuous-integration-continuous-deployment-ci-cd-pipeline","children":[]}]},{"level":2,"title":"Concepts","slug":"concepts","link":"#concepts","children":[{"level":3,"title":"Local state","slug":"local-state","link":"#local-state","children":[]},{"level":3,"title":"Cache","slug":"cache","link":"#cache","children":[]},{"level":3,"title":"OCAFile and OCA Bundle","slug":"ocafile-and-oca-bundle","link":"#ocafile-and-oca-bundle","children":[]},{"level":3,"title":"OCAFiles organization","slug":"ocafiles-organization","link":"#ocafiles-organization","children":[]}]}],"git":{"updatedTime":1743089775000},"filePathRelative":"ecosystem/oca-bin.md"}');export{h as comp,p as data};
